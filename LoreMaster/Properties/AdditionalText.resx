<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CORELESS_DIAMOND_HEART_DESCRIPTION" xml:space="preserve">
    <value>&lt;br&gt;The vessel of the core is forged with a powerful diamond plate. You promised that you give it back to Myla... right?</value>
  </data>
  <data name="CORELESS_DIAMOND_HEART_NAME" xml:space="preserve">
    <value>Diamond Heart (Shell)</value>
  </data>
  <data name="ELDERBUG_INTRO_MAIN" xml:space="preserve">
    <value>This town may not hold the most interesting wisdom, but the kingdom below sure does. There a plenty of tablets and creatures which you can learn from. Maybe someday, I'll be able to call you "Lore Master". Oh what a thought, excuse me. Anyway, if you want to explore the world below, keeping track of every knowledge that you acquired might be hard. Let me help you with that. This is a relic which tracks every bit of information that you've collected so far. Sometimes, the knowledge can be more of a threat than a blessing. In those cases, touching the ability on the relic while resting may disable them, until you touch it again. Maybe you should not waste too much time though. I heard legends that this artifact might lock it's power behind a test or something once the one in the time event "Patch 1.4" happens... whatever that might be. Don't forget "Knowledge is power".</value>
  </data>
  <data name="FULL_DIAMOND_HEART_DESCRIPTION" xml:space="preserve">
    <value>&lt;br&gt;Bathed and reforged with powerful diamonds. Formerly in possession of the crystal leader, this artefact can cause massive earth quakes.</value>
  </data>
  <data name="FULL_DIAMOND_HEART_NAME" xml:space="preserve">
    <value>Diamond Heart</value>
  </data>
  <data name="Greater_Glyph_Description" xml:space="preserve">
    <value>This vessel allows you to store the most powerful abilities that Hallownest has to offer.</value>
  </data>
  <data name="Greater_Glyph_Description_Locked" xml:space="preserve">
    <value>This vessel allows you to store the most powerful abilities that Hallownest has to offer. It seems to be sealed at the moment. Maybe Elderbug does know more about this?</value>
  </data>
  <data name="Greater_Glyph_Title" xml:space="preserve">
    <value>Greater Glyph</value>
  </data>
  <data name="Lesser_Glyph_Description" xml:space="preserve">
    <value>This weak vessel allows you to store a small ability, which you still might found useful.</value>
  </data>
  <data name="Lesser_Glyph_Description_Locked" xml:space="preserve">
    <value>This weak vessel allows you to store a small ability, which you still might found useful. It hasn't awakend yet, though. Maybe Elderbug does know more about this?</value>
  </data>
  <data name="Lesser_Glyph_Title" xml:space="preserve">
    <value>Small Glyph</value>
  </data>
  <data name="Medium_Glyph_Description" xml:space="preserve">
    <value>This vessel allows you to store a mediocre powerful ability.</value>
  </data>
  <data name="Medium_Glyph_Description_Locked" xml:space="preserve">
    <value>This vessel allows you to store a mediocre powerful ability. It doesn't emit any energy at the moment. Maybe Elderbug does know more about this?</value>
  </data>
  <data name="Medium_Glyph_Title" xml:space="preserve">
    <value>Minor Glyph</value>
  </data>
  <data name="Menderbug_Regret" xml:space="preserve">
    <value>Congratulations, you killed the only happy bug in the entire kingdom. Are you proud of yourself? Not only did you want to kill them, but you commited to 100+ hits... Good luck in the next run :)</value>
  </data>
  <data name="Menderbug_Warning_1" xml:space="preserve">
    <value>Please stop doing this...</value>
  </data>
  <data name="Menderbug_Warning_2" xml:space="preserve">
    <value>If you continue with this, you will regret that.</value>
  </data>
  <data name="Menderbug_Warning_3" xml:space="preserve">
    <value>Your game will END if you continue...</value>
  </data>
  <data name="Menderbug_Warning_4" xml:space="preserve">
    <value>Don't say I didn't warn you</value>
  </data>
  <data name="Permanent_Glyph_Description" xml:space="preserve">
    <value>A socket seems to have burned itself inside of your shell. What's the purpose of that?</value>
  </data>
  <data name="Permanent_Glyph_Title" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="SHELLLESS_DIAMOND_HEART_DESCRIPTION" xml:space="preserve">
    <value>&lt;br&gt;The core is pulsing in the rate of your heart. Just having the pure diamond core near you, let you feel the pressure. It just needs the right vessel to hold it.</value>
  </data>
  <data name="SHELLLESS_DIAMOND_HEART_NAME" xml:space="preserve">
    <value>Diamond Heart (Core)</value>
  </data>
</root>